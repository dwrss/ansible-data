---

- name: create tempfile for get-pip.py
  tempfile:
    state: file
    suffix: -get-pip.py
  register: tmp_get_pip

# This download may be fragile, since the steps below are to fix an issue with the
# get_url module which causes it fail when HTTPS certificates use SNI, so if pypa starts
# using SNI we'll have to change this step to a localaction and then upload to the ansible
# node
# fix for get_url module SNI issue with python < 2.7.9
# see: https://stackoverflow.com/questions/18578439/using-requests-with-tls-doesnt-give-sni-support/18579484#18579484
- block:
  - name: download get-pip.py
    get_url:
      url: https://bootstrap.pypa.io{{ (ansible_python_version|version_compare('3.2', '='))|ternary('/3.2', '') }}/get-pip.py
      dest: "{{ tmp_get_pip.path }}"
      force: yes
    register: get_url_pip

  rescue:
  - name: set common.sni_fix fact
    set_fact:
      common: "{{ common | combine({'sni_fix': 'yes'}) }}"

  - name: create local tempfile for get-pip.py
    tempfile:
      state: file
      suffix: -get-pip.py
    become: False
    delegate_to: localhost
    register: tmp_local_get_pip

  - name: locally download get-pip.py
    get_url:
      url: "{{ get_url_pip.url }}"
      dest: "{{ tmp_local_get_pip.path }}"
      force: yes
    become: False
    delegate_to: localhost

  - name: copy get-pip.py
    copy:
      src: "{{ tmp_local_get_pip.path }}"
      dest: "{{ tmp_get_pip.path }}"
      force: yes

  - name: remove local get-pip.py tempfile
    file:
      path: "{{ tmp_local_get_pip.path }}"
      state: absent
    become: False
    delegate_to: localhost

- name: install pip
  #command: "{{ ansible_python.executable }} {{ tmp_get_pip.path }} {{ ansible_python_version|version_compare('2.7', '<')|ternary('--no-wheel', '') }}"
  command: "{{ ansible_python.executable }} {{ tmp_get_pip.path }} --no-wheel"
  register: result
  changed_when: not result.stdout|search('already up-to-date')

- name: remove get-pip.py tempfile
  file:
    path: "{{ tmp_get_pip.path }}"
    state: absent

