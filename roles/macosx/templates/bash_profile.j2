# Put Homebrew's sbin on the PATH
export PATH="/usr/local/sbin:$PATH"

# Java config
{% if cask_apps.zulu7 is defined %}
export JAVA7=$(/usr/libexec/java_home -v 1.7)
{% endif %}
export JAVA8=$(/usr/libexec/java_home -v 1.8)
{% if cask_apps.java is defined %}
export JAVA9=$(/usr/libexec/java_home -v 9)
{% endif %}
export JAVA_HOME=$JAVA8
export JRE_HOME=$JAVA_HOME/jre
export PATH="$JAVA_HOME/bin:$PATH"

{% if homebrew_apps.maven is defined %}
# Maven config
export M2_HOME=/usr/local/opt/maven/libexec
export M2=$M2_HOME/bin
{% endif %}

{% if homebrew_apps.gradle is defined %}
# Gradle config
export GRADLE_HOME=/usr/local/opt/gradle/libexec
{% endif %}

{% if homebrew_apps.groovysdk is defined %}
# Groovy config
export GROOVY_HOME=/usr/local/opt/groovysdk/libexec
{% endif %}

{% if homebrew_apps.nvm is defined %}
# nvm config
export NVM_DIR="$HOME/.nvm"
. "/usr/local/opt/nvm/nvm.sh"
{% endif %}

# Python virtualenvwrapper setup
export WORKON_HOME=$HOME/.virtualenvs
export PROJECT_HOME=$HOME/code
source /usr/local/bin/virtualenvwrapper.sh

# Homebrew config
export HOMEBREW_GITHUB_API_TOKEN={{ homebrew_github_api_token }}
if [ -f $(brew --prefix)/etc/bash_completion ]; then
	. $(brew --prefix)/etc/bash_completion
fi

export GPG_TTY=$(tty)

# Show git branch & state in prompt
GIT_PS1_SHOWDIRTYSTATE=true
export PS1='[\h:\u \W$(__git_ps1)]\$ '

export EDITOR=/usr/local/bin/vim
