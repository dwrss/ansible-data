---

- name: create intermediate directories
  file:
    path: '{{ item | dirname }}'
    state: directory
  with_items:
    - "{{ host_key }}"
    - "{{ host_cert }}"
    - "{{ ca_key }}"
    - "{{ ca_cert }}"

- name: generate CA private key
  command: >
    openssl genrsa -aes256
    -passout {{ ('pass:'+ca_password)|quote }}
    -out {{ ca_key|quote }} 4096
  args:
    creates: '{{ ca_key }}'
  register: ca_result

- name: set CA private key mode
  file:
    path: '{{ ca_key }}'
    mode: 0400

- name: remove old CA public key
  file:
    path: '{{ ca_cert }}'
    state: absent
  when: ca_result.changed

- name: generate CA public key
  command: >
    openssl req -new -x509 -days 365
    -key {{ ca_key|quote }} -sha256
    -out {{ ca_cert|quote }}
    -passin {{ ('pass:'+ca_password)|quote }}
    -subj {{ ca_subj|quote }}
  args:
    creates: '{{ ca_cert }}'
  register: ca_result

- name: set CA public key mode
  file:
    path: '{{ ca_cert }}'
    mode: 0444

- name: generate host private key
  command: >
    openssl genrsa
    -out {{ host_key|quote }}
    4096
  args:
    creates: '{{ host_key }}'
  register: host_result

- name: set host private key mode
  file:
    path: '{{ host_key }}'
    mode: 0400

- name: create server CSR
  command: >
    openssl req
    -subj {{ ('/CN='+host_fqdn)|quote }} -sha256 -new
    -key {{ host_key|quote }}
    -out {{ (host_cert+'.csr')|quote }}
  when: host_result.changed or ca_result.changed

#- name: create server extfile
  #shell: echo subjectAltName = DNS:{{ host_fqdn }},IP:{{ host_ip }},IP:127.0.0.1 > {{ host_cert }}.extfile.cnf
  #when: host_result.changed or ca_result.changed

- name: template server extfile
  template:
    dest: "{{ host_cert }}.extfile.cnf"
    src: extfile.cnf.j2
    mode: 0444
  when: host_result.changed or ca_result.changed


- name: remove old server public key
  file:
    path: '{{ host_cert }}'
    state: absent
  when: host_result.changed or ca_result.changed

- name: create signed server public key
  command: >
    openssl x509 -req -days 365 -sha256
    -in {{ (host_cert+'.csr')|quote }}
    -CA {{ ca_cert|quote }}
    -CAkey {{ ca_key|quote }} -CAcreateserial
    -out {{ host_cert|quote }}
    -extfile {{ (host_cert+'.extfile.cnf')|quote }}
    -passin {{ ('pass:'+ca_password)|quote }}
  args:
    creates: '{{ host_cert }}'

- name: set server public key mode
  file:
    path: '{{ host_cert }}'
    mode: 0444

- name: delete CSR, srl, and cnf files
  file:
    path: '{{ item }}'
    state: absent
  with_items:
    #- '{{ ca_cert | splitext | first }}.srl'
    - '{{ host_cert }}.csr'
    - '{{ host_cert }}.extfile.cnf'

